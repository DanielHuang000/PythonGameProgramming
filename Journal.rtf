{\rtf1\ansi\ansicpg950\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 08/22/2016 Monday\
\
- git init: to create a new repository\
- git status: to show all the files or folders in the directory\
- git add: add the files to the directory \
- git commit -m \'93 \'94: to commit files and leave messages \
\
08/24/2016 Wednesday\
\
	After reviewed all the git commends we learned on last class, we learn some new git commends and some terminal commends.\
\
Terminal commends:\
- cd (change directory)\
- ls: to list out all files in that directory\
- rm: remove\
- .. : to get back to the previous folder\
\
Git commends:\
- git pull: to merge information or files in a repository\
- git push: to push information to repository\
- git clone: to clone a new repository into a new directory\
- git diff: to show difference between new files and original one\
- git log: show history of all changes\
\
08/25/2016 Thursday\
\
	We started to learn python\'92s commends. Before that, we were introduced to three types of interpreter:	\
- python - CTRL + D - use enter\
- ipyhton - CTRL + D - use enter\
- jupyter notebook - CTRL + C - use shift\
\
	Python\'92s codes are simpler than other languages in some ways, for example, it automatically set int and float for number, which the users don\'92t have to call it again.\
\
Python\'92s commends:\
- print (\'93 \'94)\
- (directly math calculation)\
- input() : to recall the information input by users\
\
08/29/2016 Monday\
\
	We started two python programs today.  For the first program, we set up equations to calculate the surface area and volume of a few combination of cubes. Using the commends that we create in last class\'94\
- A = int(input(\'93 \'94))\
- print(\'93 \'94 + str(A))\
- pow(x, 2)\
	\
	Like the first program we wrote, the second program require users to enter variables in order to solve quadratic functions. \
- import math\
	- sqrt.math()\
- if x==y:\
	(indent)\
  else:\
	(indent)\
\
08/31/2016\
	\
- .py: stands for a python file\
- .ipnb: stands for a jupyter notebook\'92s file\
\
09/01/2016\
\
	We download jet_brain and use it to create py files to run on terminal. \
- import sys\
- sys.version: to check the version of current system\
- import myModule as mf: to make the process of calling the function easier\
- from math import sin: to make our program compact \
\
09/05/2016\
\
	We learn about sys library today and how to call it  with import sys and print the array of sys with print(sys.argv).\
- print(\'91\'85\'85 \{%d\} m.\'92) %(result) \
- sys.exit()\
- ls-files\
- git push -f origin master\
- import sys: to call out the library of sys\
- print(sys.argv)\
- a = sys.argv[1]: to store the input in the 1 order in array\
\
09/07/2016\
	\
	After learning infographic way of programming, we kind of apply the similar idea into our new dividing program (before we learn array). In the digit program, we print out all the digit one by one following the sequence.\
\
- divmod()\
- mod()\
- module, residual = divmod(58,10)\
\
09/19/2016\
\
	We started to work on \'93for\'94 loop in this class. I found its quite different comparing to \'93for\'94 loop in java and C++. In python, \'93for\'94 loop requires a certain format, which sets a certain number of loops instead of infinity loops. \
\
- for x in range (a, b, c):\
\
\
\
\
\
\
\
}