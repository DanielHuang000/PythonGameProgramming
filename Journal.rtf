{\rtf1\ansi\ansicpg950\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 10/03/2016\
\
- import numpy as np: library for scientific computations\
- import matplotlib.pyplot as plt: library for graphs\
%matplotlib inline \
- legos = np.loadtxt('Legos.txt',delimiter=\'91,\'92): read tetx file\
- np.shape(legos): show the dimensions of legos (# of rows, # columns)\
\
10/05/2016\
	\
- [a,b,c]\
  >>> [1] = a\
  >>> [-1] = c\
- [[a,b,c],[d,e,f]]\
  >>> [0][1] = b\
- [a,b,c,d]\
  >>> [0:1]\
\
10/13/2016\
\
	We did a Kahoot in class today about function (for review), and we are also starting a new project of writing a similar program as Google for giving good suggestions for users, while they are doing research online.\
\
- a = [i for i in x if i == 2 ] : combine the creation of list, for loot, and if statement if needed\
\
10/17/2016\
\
	This class we started to do the most difficult project \'93word_generator\'94, which require a text file, and two python files. Using lots of code we learned before with some other codes we never learned before.\
\
10/20/2016\
\
	We finished most of the parts in word generator and left with sorting and random generator\
 \
10/24/2016\
\
	Its another new class about dictionary and list. Dictionary include a key that gives an access to a value, and unlike list its randomly store in dictionary. We did compare between list and dictionary and learn some other new functions for dictionary:\
- results = [x[0].upper() + x[1:].lower()for x in words if len(x)>2]\
\
10/28/2016\
\
	We do some more practices on list comprehension and some other functions (filter\'85), and by checking errors for others\'92 programs we learn or review those functions and rules to use those functions.\
\
11/03/2016\
\
	We started a new project of making a game that player can play tic-tac-toe with computer AI. So far we had completed the forms and rules (setting) of the game.\
	\
11/07/2016\
\
	In this class, I got almost the whole \'93Tic Tac Toe\'94 program fix, some issues such as, game never ends, unable to return the correct values, and unable to connect all the \'93parts\'94 (functions) together. After all the corrections, my program was made even more simple and efficient on having jobs equally spread.\
\
11/09/2016\
\
	We finish half of the AI system in this class (first generation of the children)\
\
11/14/2016\
\
	Completed the \'93Data Representation\'94 assignment and found that I need to do more practice on python coding to do better in class.\
\
\
\
\
}